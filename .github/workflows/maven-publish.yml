# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Java Continuous Integration

on: 
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Download source code 
      uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
      
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
  
    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
          
    - name: Build and package with Maven
      working-directory: ./example-spring-vaadin14
      run: mvn -B package
   
    - name: Analyze with sonar
      working-directory: ./example-spring-vaadin14
      run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: Deploy to Github Packages Apache Maven
      working-directory: ./example-spring-vaadin14
      run: mvn -B deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        
    - name: Get Latest Release
      id: latest_version
      uses: abatilo/release-info-action@v1.3.0
      with:
       owner: ruizrube
       repo: example-spring-vaadin14

    - name: Deploy to EB
      env:
        LATEST: ${{ steps.latest_version.outputs.latest_tag }}
      uses: einaregilsson/beanstalk-deploy@v11
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: example-spring-vaadin14
        environment_name: ExampleSpringVaadin14-env
        region: eu-west-3
        deployment_package: "./example-spring-vaadin14/target/example-spring-vaadin14-${{ steps.latest_version.outputs.latest_tag }}.jar"
        version_label: "my-app-${{ steps.latest_version.outputs.latest_tag }}"

      

    
